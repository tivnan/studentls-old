<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tivnan.studentls.dao.StudentMapper">

    <resultMap id="BaseResultMap" type="com.tivnan.studentls.bean.Student">
        <id column="student_id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="CHAR" property="name"/>
        <result column="open_id" jdbcType="CHAR" property="openId"/>
    </resultMap>

    <resultMap id="SectionResultMap" type="com.tivnan.studentls.bean.vo.Section">
        <id column="courseId" jdbcType="INTEGER" property="courseId"/>
        <result column="courseName" jdbcType="CHAR" property="courseName"/>
        <result column="teacherName" jdbcType="CHAR" property="teacherName"/>
        <result column="timeWeek" jdbcType="INTEGER" property="timeWeek"/>
        <result column="timeSlot" jdbcType="INTEGER" property="timeSlot"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    student_id, name, open_id
  </sql>

    <!--    请假拉取的课程-->
    <sql id="Section_List">
        c.course_id as courseId,
        c.course_name as courseName,
        t2.name as teacherName,
        t3.week as timeWeek,
        t3.time as timeSlot
    </sql>
    <select id="selectWithSection" resultMap="SectionResultMap">
        select
        <include refid="Section_List"></include>
        from student
        left join takes t on student.student_id = t.student_id
        left join course c on t.course_id = c.course_id
        left join teacher t2 on t2.teacher_id = c.teacher_id
        left join times t3 on c.course_id = t3.course_id
        where t.student_id = #{studentId}
        and t3.week = #{timeWeek}
        and t3.time between #{timeSlotBegin} and #{timeSlotEnd};
    </select>


    <select id="selectByExample" parameterType="com.tivnan.studentls.bean.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where student_id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where student_id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.tivnan.studentls.bean.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insert" parameterType="com.tivnan.studentls.bean.Student">
    insert into student (student_id, name, open_id
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{openId,jdbcType=CHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.tivnan.studentls.bean.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id!= null">
                student_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="openId != null">
                open_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=CHAR},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=CHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.tivnan.studentls.bean.StudentExample" resultType="java.lang.Long">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update student
        <set>
            <if test="record.id != null">
                student_id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=CHAR},
            </if>
            <if test="record.openId != null">
                open_id = #{record.openId,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student
        set student_id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=CHAR},
        open_id = #{record.openId,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tivnan.studentls.bean.Student">
        update student
        <set>
            <if test="name != null">
                name = #{name,jdbcType=CHAR},
            </if>
            <if test="openId != null">
                open_id = #{openId,jdbcType=CHAR},
            </if>
        </set>
        where student_id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tivnan.studentls.bean.Student">
    update student
    set name = #{name,jdbcType=CHAR},
      open_id = #{openId,jdbcType=CHAR}
    where student_id = #{id,jdbcType=INTEGER}
  </update>

    <!-- <resultMap id="BaseResultMap" type="com.tivnan.studentls.bean.Student">
         <id column="student_id" jdbcType="INTEGER" property="studentId"/>
         <result column="name" jdbcType="CHAR" property="name"/>
     </resultMap>
     <sql id="Example_Where_Clause">
         <where>
             <foreach collection="oredCriteria" item="criteria" separator="or">
                 <if test="criteria.valid">
                     <trim prefix="(" prefixOverrides="and" suffix=")">
                         <foreach collection="criteria.criteria" item="criterion">
                             <choose>
                                 <when test="criterion.noValue">
                                     and ${criterion.condition}
                                 </when>
                                 <when test="criterion.singleValue">
                                     and ${criterion.condition} #{criterion.value}
                                 </when>
                                 <when test="criterion.betweenValue">
                                     and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                 </when>
                                 <when test="criterion.listValue">
                                     and ${criterion.condition}
                                     <foreach close=")" collection="criterion.value" item="listItem" open="("
                                              separator=",">
                                         #{listItem}
                                     </foreach>
                                 </when>
                             </choose>
                         </foreach>
                     </trim>
                 </if>
             </foreach>
         </where>
     </sql>
     <sql id="Update_By_Example_Where_Clause">
         <where>
             <foreach collection="example.oredCriteria" item="criteria" separator="or">
                 <if test="criteria.valid">
                     <trim prefix="(" prefixOverrides="and" suffix=")">
                         <foreach collection="criteria.criteria" item="criterion">
                             <choose>
                                 <when test="criterion.noValue">
                                     and ${criterion.condition}
                                 </when>
                                 <when test="criterion.singleValue">
                                     and ${criterion.condition} #{criterion.value}
                                 </when>
                                 <when test="criterion.betweenValue">
                                     and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                 </when>
                                 <when test="criterion.listValue">
                                     and ${criterion.condition}
                                     <foreach close=")" collection="criterion.value" item="listItem" open="("
                                              separator=",">
                                         #{listItem}
                                     </foreach>
                                 </when>
                             </choose>
                         </foreach>
                     </trim>
                 </if>
             </foreach>
         </where>
     </sql>
     <sql id="Base_Column_List">
     student_id, name
   </sql>
     <select id="selectByExample" parameterType="com.tivnan.studentls.bean.StudentExample" resultMap="BaseResultMap">
         select
         <if test="distinct">
             distinct
         </if>
         <include refid="Base_Column_List"/>
         from student
         <if test="_parameter != null">
             <include refid="Example_Where_Clause"/>
         </if>
         <if test="orderByClause != null">
             order by ${orderByClause}
         </if>
     </select>
     <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
         select
         <include refid="Base_Column_List"/>
         from student
         where student_id = #{studentId,jdbcType=INTEGER}
     </select>
     <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
     delete from student
     where student_id = #{studentId,jdbcType=INTEGER}
   </delete>
     <delete id="deleteByExample" parameterType="com.tivnan.studentls.bean.StudentExample">
         delete from student
         <if test="_parameter != null">
             <include refid="Example_Where_Clause"/>
         </if>
     </delete>
     <insert id="insert" parameterType="com.tivnan.studentls.bean.Student">
     insert into student (student_id, name)
     values (#{studentId,jdbcType=INTEGER}, #{name,jdbcType=CHAR})
   </insert>
     <insert id="insertSelective" parameterType="com.tivnan.studentls.bean.Student">
         insert into student
         <trim prefix="(" suffix=")" suffixOverrides=",">
             <if test="studentId != null">
                 student_id,
             </if>
             <if test="name != null">
                 name,
             </if>
         </trim>
         <trim prefix="values (" suffix=")" suffixOverrides=",">
             <if test="studentId != null">
                 #{studentId,jdbcType=INTEGER},
             </if>
             <if test="name != null">
                 #{name,jdbcType=CHAR},
             </if>
         </trim>
     </insert>
     <select id="countByExample" parameterType="com.tivnan.studentls.bean.StudentExample" resultType="java.lang.Long">
         select count(*) from student
         <if test="_parameter != null">
             <include refid="Example_Where_Clause"/>
         </if>
     </select>
     <update id="updateByExampleSelective" parameterType="map">
         update student
         <set>
             <if test="record.studentId != null">
                 student_id = #{record.studentId,jdbcType=INTEGER},
             </if>
             <if test="record.name != null">
                 name = #{record.name,jdbcType=CHAR},
             </if>
         </set>
         <if test="_parameter != null">
             <include refid="Update_By_Example_Where_Clause"/>
         </if>
     </update>
     <update id="updateByExample" parameterType="map">
         update student
         set student_id = #{record.studentId,jdbcType=INTEGER},
         name = #{record.name,jdbcType=CHAR}
         <if test="_parameter != null">
             <include refid="Update_By_Example_Where_Clause"/>
         </if>
     </update>
     <update id="updateByPrimaryKeySelective" parameterType="com.tivnan.studentls.bean.Student">
         update student
         <set>
             <if test="name != null">
                 name = #{name,jdbcType=CHAR},
             </if>
         </set>
         where student_id = #{studentId,jdbcType=INTEGER}
     </update>
     <update id="updateByPrimaryKey" parameterType="com.tivnan.studentls.bean.Student">
     update student
     set name = #{name,jdbcType=CHAR}
     where student_id = #{studentId,jdbcType=INTEGER}
   </update>-->
</mapper>